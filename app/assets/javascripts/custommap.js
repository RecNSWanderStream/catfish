
/*Create marker points 2D array to hold name, latitude, and longitude.
Pulled by Google maps to create markers and infowindow content. Information
gathered from html tables generated by search.*/
/* 0.0.0.0:3000/search/regions.json*/

var regions = [];
$.getJSON("search/regions.json", function(data){
  $.each(data, function(key, val){
    regions.push([val.id, val.name, val.shape]);
  });
});

function initialize_page(){

var markerpoints= [];

$('.mappoint').each(function(){
  var name= $(this).attr('data-name')
  var lat= $(this).attr('data-lat');
  var lng= $(this).attr('data-lng');
  var id= $(this).attr('id');
  var zoom= $(this).attr('data-zoom');
  markerpoints.push([name, lat, lng, id, zoom]);
  });




//Function initializing the map
function initialize() {
  var myLatlng = new google.maps.LatLng(45.000, -63.000);
  var mapOptions = {
    zoom: 7,
    center: myLatlng,
    scrollwheel: false
  };



//Create new map
var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);


  

 //Geolocation Prompt
  if(navigator.geolocation) {
    browserSupportFlag = true;
    navigator.geolocation.getCurrentPosition(function(position) {
      initialLocation = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
      map.setCenter(initialLocation);
    }, function() {
      handleNoGeolocation(browserSupportFlag);
    });
  } 



/**************************************Regions************************************************************/  
  var wkt = new Wkt.Wkt();

  var nsregions = [];
if($('#map-canvas').attr('data-main')){
    //Loops through all of regions array
    //creates polygons
    for(var i=0; i<regions.length; i++){
      
      var polyvalues = wkt.read(regions[i][2]);
      var polycoords = [];
      for(var j=0; j < polyvalues[0].length; j++){
        polycoords.push(new google.maps.LatLng(polyvalues[0][j].x, polyvalues[0][j].y));
      }

      nsregions[i] = new google.maps.Polygon({
        paths: polycoords,
        strokeColor: '#00FF00',
        strokeOpacity: 0.0,
        strokeWeight: 3,
        fillColor: '#00FF00',
        fillOpacity: 0.35
      });
      nsregions[i].setMap(map);
    }

    //The polygon clicking functions
    //Must be called separately
    google.maps.event.addListener(nsregions[0], 'click', function(){
      polyClick(regions[0][1]);
    });

    google.maps.event.addListener(nsregions[1], 'click', function(){
      polyClick(regions[1][1]);
    });

    google.maps.event.addListener(nsregions[2], 'click', function(){
      polyClick(regions[2][1]);
    });

    google.maps.event.addListener(nsregions[3], 'click', function(){
      polyClick(regions[3][1]);
    });

    google.maps.event.addListener(nsregions[4], 'click', function(){
      polyClick(regions[4][1]);
    });

    google.maps.event.addListener(nsregions[5], 'click', function(){
      polyClick(regions[5][1]);
    });

    google.maps.event.addListener(nsregions[6], 'click', function(){
      polyClick(regions[6][1]);
    });

    google.maps.event.addListener(nsregions[7], 'click', function(){
      polyClick(regions[7][1]);
    });

    google.maps.event.addListener(nsregions[8], 'click', function(){
      polyClick(regions[8][1]);
    });

    google.maps.event.addListener(nsregions[9], 'click', function(){
      polyClick(regions[9][1]);
    });

    google.maps.event.addListener(nsregions[10], 'click', function(){
      polyClick(regions[10][1]);
    });

    google.maps.event.addListener(nsregions[11], 'click', function(){
      polyClick(regions[11][1]);
    });

    google.maps.event.addListener(nsregions[12], 'click', function(){
      polyClick(regions[12][1]);
    });

    google.maps.event.addListener(nsregions[13], 'click', function(){
      polyClick(regions[13][1]);
    });

    google.maps.event.addListener(nsregions[14], 'click', function(){
      polyClick(regions[14][1]);
    });

    google.maps.event.addListener(nsregions[15], 'click', function(){
      polyClick(regions[15][1]);
    });

    google.maps.event.addListener(nsregions[16], 'click', function(){
      polyClick(regions[16][1]);
    });

    google.maps.event.addListener(nsregions[17], 'click', function(){
      polyClick(regions[17][1]);
    });
}


/*******************************************Markers*******************************************************/
  //Loops through all of markerpoints array
  for(var i=0; i<markerpoints.length; i++){

  

    //Get latitude and longitude for each marker
    var markerLatlng= new google.maps.LatLng(markerpoints[i][1], markerpoints[i][2]);



    //Create new marker for each iteration
    var marker = new google.maps.Marker({
        position: markerLatlng,
        map: map
    });
  
  


    //Creates an inforwindow for each iteration of the loop, setting content and open function
    var infowindow = new google.maps.InfoWindow();
      google.maps.event.addListener(marker, 'mouseover', (function(marker, i) {
        return function(){
          infowindow.setContent('<a href="../assets/'+ markerpoints[i][3] +'">'+markerpoints[i][0]+'</a>');
          infowindow.open(map, marker);
          $('#' + (markerpoints[i][3])).mouseover(function(){
            google.maps.event.trigger(marker, 'mouseover');});
        }

      })(marker, i));

  
    //Function to prvent multiple windows
    google.maps.event.addListener(marker, 'mouseout', (function(marker, i) {
      return function(){
        infowindow.close();}}));


    if(markerpoints.length < 2 && markerpoints[0][4]=="true"){
      map.setCenter(new google.maps.LatLng(markerpoints[0][1], markerpoints[0][2]));
      map.setZoom(10);
    } 
  }
}



//Launch map
google.maps.event.addDomListener(window, 'load', initialize);


/*The below will append the icon values to both search fields on the landing page
  providing a clickable search rather than typin*/
$('.activity-icons ul li a').click(function(activity_click){
    activity_click.preventDefault();
    var content = $(this).attr('title');
    
    if($('.equation-results-home input').val()===''){
      $('.equation-results-home input').val(content);
    }else{
      $('.equation-results-home input').val($('.equation-results-home input').val() +" "+content);
    }

    if($('#q').val()===''){
      $('#q').val(content);
    }else{
      $('#q').val($('#q').val() +" "+content);
    }
});

//Submits the search form at the top when the button below the map is clicked
$('.col-lg-2 a').click(function(activity_search_click){
    activity_search_click.preventDefault();
    $('form').submit();
});

};


//Polygon click function to be called
function polyClick(name){
      if($('.equation-results-home input').val()===''){
        $('.equation-results-home input').val(name);
      }else{
        $('.equation-results-home input').val($('.equation-results-home input').val() +" "+name);
      }

      if($('#q').val()===''){
       $('#q').val(name);
      }else{
        $('#q').val($('#q').val() +" "+name);
      }        
    };

//Load function for maps
$(document).ready(initialize_page);
$(document).on('page:load', initialize_page);
//End